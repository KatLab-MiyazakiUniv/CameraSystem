name: Pytest and Report coverage

on: [push, pull_request]

jobs:
  build:

    runs-on: macOS-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: ['3.7']

    steps:
      - uses: actions/checkout@master

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

      - name: Poetry Cache venv
        uses: actions/cache@v1
        with:
          path: ~/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config settings.virtualenvs.in-project false
          poetry config settings.virtualenvs.path ~/.venv

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Test with pytest
        run: cd source && PYTHONPATH=. poetry run pytest --cov=. --cov=block_bingo --cov=bluetooth --cov=detection_number --cov=detection_block --cov-branch --cov-report=xml
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash) -t fea0d3fe-4f4d-456b-aee7-5a0f3b5ca3e2 -c -F unittests
